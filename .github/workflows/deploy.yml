---
name: Build and Deploy Cyberfolio Server
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'

      - name: Install Yarn v1
        run: npm install -g yarn@1.22.22

      - name: Install Dependencies
        run: yarn

      - name: Build Project
        run: yarn build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/ # Adjust based on your output dir

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Create .env file
        run: |
          echo "NODE_ENV=production" > .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "MONGO_URL=${{ secrets.MONGO_URL }}" >>.env
          echo "APP_NAME=${{ secrets.APP_NAME }}" >>.env
          echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >>.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >>.env
          echo "JWT_EXPIRY_IN_DAYS=${{ secrets.JWT_EXPIRY_IN_DAYS }}" >>.env
          echo "INFURA_API_URL=${{ secrets.INFURA_API_URL }}" >>.env
          echo "INFURA_PROJECT_ID=${{ secrets.INFURA_PROJECT_ID }}" >>.env
          echo "COINGECKO_V3_API_URL=${{ secrets.COINGECKO_V3_API_URL }}" >>.env
          echo "COINMARKETCAP_API_KEY=${{ secrets.COINMARKETCAP_API_KEY }}" >>.env
          echo "COINMARKETCAP_API_URL=${{ secrets.COINMARKETCAP_API_URL }}" >>.env
          echo "COVALENT_V1_API_URL=${{ secrets.COVALENT_V1_API_URL }}" >>.env
          echo "COVALENT_API_KEY=${{ secrets.COVALENT_API_KEY }}" >>.env
          echo "MORALIS_API_URL=${{ secrets.MORALIS_API_URL }}" >>.env
          echo "MORALIS_API_KEY=${{ secrets.MORALIS_API_KEY }}" >>.env
          echo "BLOCKCHAIN_INFO_API_URL=${{ secrets.BLOCKCHAIN_INFO_API_URL }}" >>.env
          echo "BINANCE_API_URL=${{ secrets.BINANCE_API_URL }}" >>.env
          echo "BINANCETR_API_URL=${{ secrets.BINANCETR_API_URL }}" >>.env
          echo "KUCOIN_API_URL=${{ secrets.KUCOIN_API_URL }}" >>.env
          echo "KUCOIN_API_VERSION=${{ secrets.KUCOIN_API_VERSION }}" >>.env
          echo "KUCOIN_API_VERSION=${{ secrets.KUCOIN_API_VERSION }}" >>.env

      - name: Prepare deployment folder
        run: |
          mkdir -p deploy/dist
          cp -r dist/* deploy/dist/
          cp .env deploy/dist/
          cp package.json yarn.lock deploy/

      - name: Upload project using rsync
        uses: burnett01/rsync-deployments@5.2
        with:
          switches: -avz --delete
          path: deploy/
          remote_path: '/root/projects/cyberfolio-server'
          remote_host: ${{ secrets.SERVER_HOST }}
          remote_user: ${{ secrets.SERVER_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: SSH into server and restart app
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/projects/cyberfolio-server
            nvm use 22.16.0 || nvm install 22.16.0
            yarn --version || npm install -g yarn@1.22.22
            yarn cache clean
            yarn install --production
            pm2 restart cyberfolio-server || pm2 start dist/index.js --name cyberfolio-server
